{"version":3,"sources":["views.js","model.js","controller.js","app.js"],"names":["Dom","type","description","value","getInput","document","querySelector","parseFloat","formatNumber","n","num","toFixed","replace","number","addListItem","obj","html","element","newHtml","id","insertAdjacentHTML","deleteListItem","el","getElementById","parentNode","removeChild","clearFields","fields","querySelectorAll","forEach","cur","focus","displayBudget","textContent","budget","totalInc","totalExp","expensesPercentage","percent","displayPercentages","percentages","i","displayMonth","now","Date","day","getDay","date","getDate","month","getMonth","year","getFullYear","months","days","Expense","percentage","totalIncome","Math","round","Income","data","allItems","exp","inc","totals","console","log","addItem","des","val","ID","newItem","length","push","dataDeleteItem","ids","index","map","indexOf","splice","calculateTotal","sum","calculateBudget","calculatePercentages","calcPercentage","getPercentages","allPercentages","getPercentage","getBudget","localStorageData","localStorage","setItem","JSON","stringify","getLocalData","localData","parse","getItem","deleteLocalData","removeItem","updateLocalData","updateBudget","updatePercentages","input","isNaN","deleteItem","e","itemID","target","splitID","split","parseInt","loadLocalStorageData","newIncItem","newExpItem","init","addEventListener","event","keyCode","which"],"mappings":"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","file":"app.6e9f2aab.js","sourceRoot":"..","sourcesContent":["const Dom = {\r\n    type: \".add__type\",\r\n    description: \".add__description\",\r\n    value: \".add__value\"\r\n};\r\n\r\n// Get input\r\nexport const getInput = () => {\r\n    return {\r\n        type: document.querySelector(\".add__type\").value,\r\n        description: document.querySelector(\".add__description\").value,\r\n        value: parseFloat(document.querySelector(\".add__value\").value)\r\n    };\r\n};\r\n\r\nconst formatNumber = (n, type) => {\r\n    const num = n.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n    const number = num * 1;\r\n    type === \"inc\" ? `+ ${number}` : `- ${number}`;\r\n    return num;\r\n};\r\n\r\nexport const addListItem = (obj, type) => {\r\n    let html, element;\r\n    if (type === \"inc\") {\r\n        element = document.querySelector(\".income__list\");\r\n        html = ` <div class=\"item\" id=\"inc-%id%\">\r\n      <div class=\"item__description\">%description%</div>\r\n      <div class=\"box__value\">\r\n      <div class=\"item__value item__value-income\">+ %value%</div>\r\n      <div class=\"item__delete\">\r\n      <svg class=\"icon-box-delete\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n      <use xlink:href=\"img/sprite.svg#icon-cancel-circle\"></use>\r\n        </svg>\r\n      </div>\r\n      </div>\r\n      </div>`;\r\n    } else if (type === \"exp\") {\r\n        element = document.querySelector(\".expenses__list\");\r\n        html = `<div class=\"item\" id=\"exp-%id%\">\r\n  <div class=\"item__description\">%description%</div>\r\n  <div class=\"box__value\">\r\n  <div class=\"item__value item__value-expense\">- %value%</div>\r\n  <div class=\"item__percentage\">21%</div>\r\n  <div class=\"item__delete\">\r\n  <svg class=\"icon-box-delete\">\r\n  <use xlink:href=\"img/sprite.svg#icon-cancel-circle\"></use>\r\n    </svg>\r\n  </div>\r\n  </div>\r\n  </div>`;\r\n    }\r\n\r\n    let newHtml = html.replace(\"%id%\", obj.id);\r\n    newHtml = newHtml.replace(\"%description%\", obj.description);\r\n    newHtml = newHtml.replace(\"%value%\", formatNumber(obj.value, type));\r\n\r\n    element.insertAdjacentHTML(\"beforeend\", newHtml);\r\n};\r\n\r\nexport const deleteListItem = id => {\r\n    const el = document.getElementById(id);\r\n    el.parentNode.removeChild(el);\r\n};\r\n\r\nexport const clearFields = () => {\r\n    const fields = document.querySelectorAll(\r\n        `${Dom.description}, ${Dom.value}`\r\n    );\r\n    fields.forEach(cur => {\r\n        cur.value = \"\";\r\n    });\r\n    fields[0].focus();\r\n};\r\n\r\nexport const displayBudget = obj => {\r\n    document.querySelector(\".budget__value\").textContent = formatNumber(\r\n        obj.budget\r\n    );\r\n    document.querySelector(\".budget__income--value\").textContent = formatNumber(\r\n        obj.totalInc\r\n    );\r\n    document.querySelector(\r\n        \".budget__expenses--value\"\r\n    ).textContent = formatNumber(obj.totalExp);\r\n\r\n    const expensesPercentage = document.querySelector(\r\n        \".budget__expenses--percentage\"\r\n    );\r\n    obj.percent > 0\r\n        ? (expensesPercentage.textContent = `${obj.percent}%`)\r\n        : (expensesPercentage.textContent = \"---\");\r\n};\r\n\r\nexport const displayPercentages = percentages => {\r\n    const fields = document.querySelectorAll(\".item__percentage\");\r\n    fields.forEach((cur, i) => {\r\n        cur.textContent = percentages[i] > 0 ? `${percentages[i]}%` : `---`;\r\n    });\r\n};\r\n\r\nexport const displayMonth = () => {\r\n    const now = new Date();\r\n\r\n    const days = [\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\"\r\n    ];\r\n    const day = now.getDay();\r\n\r\n    const date = now.getDate();\r\n\r\n    const months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n    ];\r\n    const month = now.getMonth();\r\n\r\n    const year = now.getFullYear();\r\n\r\n    document.querySelector(\r\n        \".budget__title--month\"\r\n    ).textContent = `${date} ${months[month]} ${year} (${days[day]})`;\r\n};\r\n","import { clearFields } from \"./views.js\";\r\n\r\nclass Expense {\r\n    constructor(id, description, value) {\r\n        this.id = id;\r\n        this.description = description;\r\n        this.value = value;\r\n        this.percentage = -1;\r\n    }\r\n\r\n    calcPercentage(totalIncome) {\r\n        if (totalIncome > 0) {\r\n            this.percentage = Math.round((this.value / totalIncome) * 100);\r\n        } else {\r\n            this.percentage = -1;\r\n        }\r\n    }\r\n\r\n    getPercentage() {\r\n        return this.percentage;\r\n    }\r\n}\r\n\r\nclass Income {\r\n    constructor(id, description, value) {\r\n        this.id = id;\r\n        this.description = description;\r\n        this.value = value;\r\n    }\r\n}\r\n\r\nconst data = {\r\n    allItems: {\r\n        exp: [],\r\n        inc: []\r\n    },\r\n    totals: {\r\n        exp: 0,\r\n        inc: 0\r\n    },\r\n    budget: 0,\r\n    percentage: -1\r\n};\r\n\r\nconsole.log(data);\r\n\r\nexport const addItem = (type, des, val) => {\r\n    let ID;\r\n    data.allItems[type].length > 0\r\n        ? (ID = data.allItems[type][data.allItems[type].length - 1].id + 1)\r\n        : (ID = 0);\r\n\r\n    let newItem;\r\n    type === \"exp\"\r\n        ? (newItem = new Expense(ID, des, val))\r\n        : (newItem = new Income(ID, des, val));\r\n\r\n    data.allItems[type].push(newItem);\r\n\r\n    return newItem;\r\n};\r\n\r\nexport const dataDeleteItem = (type, id) => {\r\n    const ids = data.allItems[type].map(cur => {\r\n        return cur.id;\r\n    });\r\n\r\n    const index = ids.indexOf(id);\r\n\r\n    if (index !== -1) {\r\n        data.allItems[type].splice(index, 1);\r\n    }\r\n};\r\n\r\nconst calculateTotal = type => {\r\n    let sum = 0;\r\n    data.allItems[type].forEach(cur => {\r\n        sum += cur.value;\r\n    });\r\n\r\n    data.totals[type] = sum;\r\n};\r\n\r\nexport const calculateBudget = () => {\r\n    //calc total incom end expenses\r\n    calculateTotal(\"exp\");\r\n    calculateTotal(\"inc\");\r\n\r\n    //calc the budget inc-exp\r\n    data.budget = data.totals.inc - data.totals.exp;\r\n\r\n    //calc the percentage\r\n    data.totals.inc > 0\r\n        ? (data.percentage = Math.round(\r\n              (data.totals.exp / data.totals.inc) * 100\r\n          ))\r\n        : (data.percentage = -1);\r\n};\r\n\r\nexport const calculatePercentages = () => {\r\n    data.allItems.exp.forEach(cur => {\r\n        cur.calcPercentage(data.totals.inc);\r\n    });\r\n};\r\n\r\nexport const getPercentages = () => {\r\n    const allPercentages = data.allItems.exp.map(cur => {\r\n        return cur.getPercentage();\r\n    });\r\n    return allPercentages;\r\n};\r\n\r\nexport const getBudget = () => {\r\n    return {\r\n        budget: data.budget,\r\n        totalInc: data.totals.inc,\r\n        totalExp: data.totals.exp,\r\n        percent: data.percentage\r\n    };\r\n};\r\n\r\n//LocalStorage\r\n\r\nexport const localStorageData = () => {\r\n    localStorage.setItem(\"data\", JSON.stringify(data));\r\n};\r\n\r\nexport const getLocalData = () => {\r\n    const localData = JSON.parse(localStorage.getItem(\"data\"));\r\n    return localData;\r\n};\r\n\r\nexport const deleteLocalData = () => {\r\n    localStorage.removeItem(\"data\");\r\n};\r\n\r\nexport const updateLocalData = localStorageData => {\r\n    data.totals = localStorageData.totals;\r\n    data.budget = localStorageData.budget;\r\n    data.percentage = localStorageData.percentage;\r\n};\r\n","import {\r\n    getInput,\r\n    addListItem,\r\n    clearFields,\r\n    displayBudget,\r\n    deleteListItem,\r\n    displayPercentages,\r\n    displayMonth\r\n} from \"./views.js\";\r\nimport {\r\n    addItem,\r\n    calculateBudget,\r\n    getBudget,\r\n    dataDeleteItem,\r\n    calculatePercentages,\r\n    getPercentages,\r\n    localStorageData,\r\n    getLocalData,\r\n    deleteLocalData,\r\n    updateLocalData\r\n} from \"./model.js\";\r\n\r\nconst updateBudget = () => {\r\n    //Calculate the budget\r\n    calculateBudget();\r\n\r\n    //Return the budget\r\n    const budget = getBudget();\r\n\r\n    //Display the budget on the UI\r\n    displayBudget(budget);\r\n};\r\n\r\nconst updatePercentages = () => {\r\n    //calc the percentages\r\n    calculatePercentages();\r\n    //red percentages from the model\r\n    const percentages = getPercentages();\r\n    //update the Ui with th percentages\r\n    displayPercentages(percentages);\r\n};\r\n\r\nconst getItem = () => {\r\n    const input = getInput();\r\n    console.log(input);\r\n\r\n    if (input.description !== \"\" && !isNaN(input.value) && input.value > 0) {\r\n        const newItem = addItem(input.type, input.description, input.value);\r\n\r\n        addListItem(newItem, input.type);\r\n\r\n        clearFields();\r\n\r\n        updateBudget();\r\n\r\n        updatePercentages();\r\n\r\n        localStorageData();\r\n    }\r\n};\r\n\r\nconst deleteItem = e => {\r\n    // const itemID = e.target.parentNode.parentNode.parentNode.id;\r\n    const itemID = e.target.parentNode.parentNode.parentNode.id;\r\n    console.log(itemID);\r\n\r\n    if (itemID) {\r\n        const splitID = itemID.split(\"-\");\r\n        const type = splitID[0];\r\n        const ID = parseInt(splitID[1]);\r\n\r\n        dataDeleteItem(type, ID);\r\n\r\n        deleteListItem(itemID);\r\n\r\n        updateBudget();\r\n\r\n        updatePercentages();\r\n\r\n        localStorageData();\r\n    }\r\n};\r\n\r\nconst loadLocalStorageData = () => {\r\n    const localData = getLocalData();\r\n\r\n    if (localData) {\r\n        updateLocalData(localData);\r\n\r\n        localData.allItems.inc.forEach(cur => {\r\n            const newIncItem = addItem(\"inc\", cur.description, cur.value);\r\n            addListItem(newIncItem, \"inc\");\r\n        });\r\n\r\n        localData.allItems.exp.forEach(cur => {\r\n            const newExpItem = addItem(\"exp\", cur.description, cur.value);\r\n            addListItem(newExpItem, \"exp\");\r\n        });\r\n\r\n        const budget = getBudget();\r\n        displayBudget(budget);\r\n\r\n        updatePercentages();\r\n    }\r\n};\r\n\r\nexport const init = () => {\r\n    document.querySelector(\".add__btn\").addEventListener(\"click\", getItem);\r\n\r\n    document.addEventListener(\"keypress\", function(event) {\r\n        if (event.keyCode === 13 || event.which === 13) {\r\n            getItem();\r\n        }\r\n    });\r\n\r\n    document.querySelector(\".container\").addEventListener(\"click\", deleteItem);\r\n    displayMonth();\r\n    displayBudget({\r\n        budget: 0,\r\n        totalInc: 0,\r\n        totalExp: 0,\r\n        percent: -1\r\n    });\r\n    loadLocalStorageData();\r\n};\r\n","import { init } from \"./controller.js\";\r\ninit();\r\n"]}